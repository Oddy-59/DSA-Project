openapi: 3.0.1
info:
  title: Main Openapi Yaml
  version: 0.1.0

servers:
- url: "{server}:{port}/"
  variables:
    server:
      default: http://localhost
    port:
      enum:
          - "44333"
          - "8990"
      default: "8000"
paths:
  /addLecturer:
    summary: Operations about adding lecturers
    post:
      operationId: postAddlecturer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lecturer'
      responses:
        "201":
          description: Created
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: Incorrect input
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /retrieveLecturerByStaffNumber:
    get:
      operationId: getRetrievelecturerbystaffnumber
      parameters:
      - name: staffNumber
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lecturer'
  /retrieveAllLecturers:
    get:
      operationId: getRetrievealllecturers
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lecturer'
  /UpdateLecturer:
    put:
      operationId: putUpdatelecturer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lecturer'
      responses:
        "200":
          description: Ok
          content:
            text/plain:
              schema:
                type: string
  /deleteLecturer:
    delete:
      operationId: deleteDeletelecturer
      parameters:
      - name: staffNumber
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Ok
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /createCourse:
    post:
      operationId: postCreatecourse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        "201":
          description: Created
          content:
            text/plain:
              schema:
                type: string
  /retrieveAllLecturersByCourse:
    get:
      operationId: getRetrievealllecturersbycourse
      parameters:
      - name: coursesTaught
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lecturer'
  /retrieveAllLecturerByOffice:
    get:
      operationId: getRetrievealllecturerbyoffice
      parameters:
      - name: officeNumber
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lecturer'
components:
  schemas:
    Lecturer:
      required:
      - coursesTaught
      - name
      - officeNumber
      - staffNumber
      - title
      type: object
      properties:
        staffNumber:
          type: integer
          format: int64
        officeNumber:
          type: integer
          format: int64
        name:
          type: string
        title:
          type: string
        coursesTaught:
          type: string
          enum:
          - WAD612S
          - DTA612S
          - DSA612S
    ErrorPayload:
      type: object
      properties:
        reason:
          type: string
          description: Reason phrase
        path:
          type: string
          description: Request path
        method:
          type: string
          description: Method type of the request
        message:
          type: string
          description: Error message
        timestamp:
          type: string
          description: Timestamp of the error
        status:
          type: integer
          description: Relevant HTTP status code
          format: int32
    Course:
      required:
      - NQF_Level
      - courseCode
      - courseName
      - id
      type: object
      properties:
        id:
          type: string
        courseName:
          type: string
        courseCode:
          type: string
        NQF_Level:
          type: integer
          format: int64
